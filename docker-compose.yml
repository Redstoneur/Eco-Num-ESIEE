services:
  server:
    build:
      context: ./back-end
      dockerfile: Dockerfile
    container_name: Server
    image: eco-num-esiee-server
    restart: unless-stopped
    networks:
      app-net:
        ipv4_address: 172.18.0.10
    ports:
      - "8000:8000"
    deploy:
      resources:
        limits:
          cpus: '1.0' # Limite à 1 CPU
          memory: '512M' # Limite à 512 MB de RAM
        reservations:
          cpus: '0.5' # Réservation de 0.5 CPU
          memory: '256M' # Réservation de 256 MB de RAM
    environment:
      - TZ=Europe/Paris
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  client:
    build:
      context: ./front-end
      dockerfile: Dockerfile
    container_name: Client
    image: eco-num-esiee-client
    restart: unless-stopped
    networks:
      app-net:
        ipv4_address: 172.18.0.11
    ports:
      - "3000:3000"
    depends_on:
      server:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '1.0' # Limite à 1 CPU
          memory: '512M' # Limite à 512 MB de RAM
        reservations:
          cpus: '0.5' # Réservation de 0.5 CPU
          memory: '256M' # Réservation de 256 MB de RAM
    environment:
      - SERVER_URL=http://172.18.0.10:8000
      - TZ=Europe/Paris
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"

networks:
  app-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16
